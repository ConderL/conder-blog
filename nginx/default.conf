server {
    listen 80;
    server_name conder.top www.conder.top;

    location / {
        proxy_pass http://web:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# API站点配置
server {
    listen 80;
    server_name api.conder.top;

    location / {
        
        if ($request_method !~ ^(GET|POST|PUT|DELETE|OPTIONS)$) {
            return 405;
        }

        proxy_method $request_method;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://nest:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        
        # 完全交由NestJS处理CORS，不在Nginx层面处理
        # 改为nestjs的cors配置，下方已弃用，虽然也能用
        # set $cors_origin "";
        # if ($http_origin ~* "^https?://(www\.)?conder\.top.*") {
        #     set $cors_origin $http_origin;
        # }
        # if ($http_origin ~* "^https?://admin\.conder\.top.*") {
        #     set $cors_origin $http_origin;
        # }

        # # 添加CORS头，允许多个域名访问API
        # add_header 'Access-Control-Allow-Origin' $cors_origin always;
        # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        # add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        # add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # 处理OPTIONS预检请求
        # if ($request_method = 'OPTIONS') {
            # add_header 'Access-Control-Max-Age' 1728000;
            # add_header 'Access-Control-Allow-Origin' $http_origin always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        #     add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        #     add_header 'Access-Control-Allow-Credentials' 'true' always;
        #     add_header 'Content-Type' 'text/plain charset=UTF-8';
        #     add_header 'Content-Length' 0;
        #     return 204;
        # }
    }
}

# 后台管理配置
server {
    listen 80;
    server_name admin.conder.top;

    location / {
        proxy_pass http://admin:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

   # API请求转发到nest服务
    location /api/ {
        proxy_method $request_method;

        # 重写路径，移除/api前缀
        rewrite ^/api/(.*) /$1 break;
        
        proxy_pass http://nest:3000;  # 使用容器名
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 文件上传设置
        client_max_body_size 10M;  # 允许最大10M上传
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_buffering off;  # 对于大文件上传禁用缓冲
    }
}