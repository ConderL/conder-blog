services:
  migrations:
    image: ${DOCKERHUB_USERNAME}/blog-nest:latest
    container_name: blog-migrations
    restart: "no"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
    networks:
      - blog-network
  mysql:
    image: mysql:8.0
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5
    pull_policy: if_not_present
    container_name: blog-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - blog-network

  redis:
    image: redis:7.0
    pull_policy: if_not_present
    container_name: blog-redis
    restart: always
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - blog-network

  nest:
    image: ${DOCKERHUB_USERNAME}/blog-nest:latest
    pull_policy: always
    labels:
      - "sh.rancher.container.pull_images=always"
    deploy:
      update_config:
        order: start-first
    container_name: blog-nest
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - migrations
      - mysql
      - redis
    environment:
      # 数据库配置
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}

      # Redis配置
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}

      # JWT配置
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=7d

      - DOCKERHUB_USERNAME=${DOCKERHUB_USERNAME}
    networks:
      - blog-network
    volumes:
      - ./packages/blog-nest/.env:/app/.env
      - ./nginx/nest.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf

  admin:
    image: ${DOCKERHUB_USERNAME}/blog-admin:latest
    pull_policy: always
    deploy:
      update_config:
        order: start-first
    container_name: blog-admin
    volumes:
      - ./nginx/admin.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: always
    ports:
      - "8080:80"
    networks:
      - blog-network

  web:
    image: ${DOCKERHUB_USERNAME}/blog-web:latest
    pull_policy: always
    deploy:
      update_config:
        order: start-first
    container_name: blog-web
    volumes:
      - ./nginx/web.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: always
    ports:
      - "3333:80"
    networks:
      - blog-network

  nginx:
    image: nginx:stable
    container_name: blog-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl.conf:/etc/nginx/conf.d/ssl.conf
      - /etc/nginx/cert:/etc/nginx/cert
      - nginx_logs:/var/log/nginx
    depends_on:
      - nest
      - admin
      - web
    networks:
      - blog-network

networks:
  blog-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  nginx_logs:
